{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAsB7C,OACG,0BAAMC,SAfY,SAACC,GACnBA,EAAMC,iBAEHJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAYd,2BACGO,KAAK,OACLC,MAAOT,EACPU,SAxBW,SAACP,GAClBF,EAAcE,EAAMQ,OAAOF,Y,uBCJpBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0DAE6CC,UAAUH,GAFvD,sDAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCFPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCJHO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDd,SAACA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAqBvC,OAdAC,qBAAW,WAEPxB,EAAQC,GACPwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAEGqB,EDlB0BK,CAAa1B,GAAjCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAGtB,OACG,oCACG,4BAAKpB,GAEJoB,EAAU,uBAAGJ,UAAU,yCAAb,eAAuE,KAElF,yBAAKA,UAAU,aAETH,EAAOJ,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACGiB,IAAKjB,EAAIC,IACLD,UEfZkB,EAAe,WAAO,IAAD,EAEK1C,mBAAS,CAAC,SAFf,mBAExBQ,EAFwB,KAEZT,EAFY,KAQ/B,OACG,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEMS,EAAWe,KAAK,SAAAT,GAAS,OACtB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,UAAWA,U,MChB7B6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ac562f74.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategorias}) => {\n\n   const [inputValue, setInputValue] = useState('');\n   \n   const handleInput = (event) => {\n      setInputValue(event.target.value);\n   }\n\n   const handleSubmit = (event) => {\n      event.preventDefault();\n\n      if(inputValue.trim().length > 2){\n         setCategorias(categorias => [inputValue, ...categorias ]);\n         setInputValue('');\n      }\n   }\n\n   // const handleDelete = () => {\n   //    // setInputValue(categorias.pop());\n   //    console.log('Puchado');\n   // }\n\n   return (\n      <form onSubmit={handleSubmit}>\n         {/* <button onClick={handleDelete}> Borrar</button> */}\n         <input \n            type=\"text\"\n            value={inputValue}\n            onChange={handleInput}\n         />\n     </form>\n   )\n}\n\nAddCategory.propTypes = {\n   setCategorias: PropTypes.func.isRequired\n}\n","// Las helpers van a ser funciones que realizan un trabajo\n// en específico, pueden recibir argumentos, los procesan\n// y hacen el return, y que no hace falta que dibujen el state\n\nexport const getGifs = async(categoria) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(categoria) }&api_key=JHNpNgcZyTopLGERHL0R7WclmbogK4OG`;\n    const respuesta = await fetch(url);\n    const {data} = await respuesta.json();\n        \n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    // console.log(gifs);\n    return gifs;\n}\n\n/*\n* El async regresa una pormesa que resuelve la colección de mis imgs\n*/","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    // console.log({id, title, url});\n\n    return (\n        <div className=\"card animate__animated animate__zoomIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ categoria }) => {\n\n   const { data: images, loading } = useFetchGifs(categoria);\n\n\n   return (\n      <>\n         <h3>{categoria}</h3>\n\n         {loading ? <p className=\"card animate__animated animate__flash\">Cargando...</p> : null}\n\n         <div className=\"card-grid\">\n            {\n               images.map(img => (\n                  <GifGridItem\n                     key={img.id}\n                     {...img}\n                  />\n               ))\n            }\n         </div>\n      </>\n   )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (categoria) => {\n\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect( () => {\n\n        getGifs(categoria)\n        .then(imgs => {\n\n            setState({\n                data: imgs,\n                loading: false\n            })\n\n        })\n\n    }, [categoria])\n    \n    return state; // {data: [], loading: true}\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n    \n   const [categorias, setCategorias] = useState(['Goku']);\n    \n   // const handleAdd = () => {\n   //     setCategorias([...categorias, 'Nada']);\n   // }\n    \n   return (\n      <>\n         <h2>GifExpertApp</h2>\n         <AddCategory setCategorias={setCategorias}/>\n         <hr></hr>\n         <ol>\n            {\n               categorias.map( categoria => (\n                  <GifGrid \n                  key={categoria}\n                  categoria={categoria}\n                  />\n               ))\n            }\n         </ol>\n         </>\n   )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}